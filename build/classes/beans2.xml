<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
<!-- 真实的spring bean 引入了头标识
注解方式
 -->
<!-- 
此方式是通过注解的形式向需要王bean属性中注入内容
通过此注解，就不需要在这里定义bean时给bean加上auto-wire属性设置值了
这个注解，其实是实例化了4个XXXPostProcessor，是用来在bean实例化时去检查是否有添加注解配置
如果有就调用这里实例化的处理器bean，来对注解做出解释处理，注入需要的属性
 -->
    
    <context:annotation-config />
    <!-- 
    组件扫描 一下4类认为是组件：@Component, @Repository @Service @Controller
     -->
    <context:component-scan base-package="com.bjsxt"/>
    
    <!-- 
    component 组件 在另一个bean看来就是一个资源， 定义包扫描  可以不再xml中写bean定义了
    全部让spring去做包扫描
     -->
     <!-- aop注解 -->
	<aop:aspectj-autoproxy/>
	
		<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
		<!-- 这里配置注解类，@Entity等，和db table 匹配 -->
			<list>
				<value>com.bjsxt.model.User</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- 注解方式的配置事务 -->
<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager"/>

	
</beans>